{"version":3,"sources":["components/Header/HeaderText.jsx","components/Pickers/PriorityPicker.jsx","components/Pickers/ColorPicker.jsx","components/Header/ToDoAdd.jsx","components/Header/ToDoHeader.jsx","components/ToDo.jsx","components/Pickers/GroupPicker.jsx","components/ToDoTab.jsx","components/ToDoList.jsx","App.js","index.js"],"names":["HeaderText","props","className","PriorityPicker","required","pickPriority","useState","priority","setPriority","useEffect","FormControl","InputLabel","id","Select","labelId","value","onChange","e","target","MenuItem","ColorPicker","pickColor","none","color","setColor","ToDoAdd","onSubmit","open","setOpen","input","setInput","handleClose","Button","variant","startIcon","onClick","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","preventDefault","uniqid","text","date","Date","now","isComplete","TextField","autoFocus","margin","label","type","fullWidth","Grid","container","direction","justify","alignItems","item","xs","ToDoHeader","getSearchValue","getColorValue","search","setSearch","Container","maxWidth","multiline","rowsMax","ToDo","todos","completeTodo","removeTodo","group","newtodos","setNewtodos","handleOnDragEnd","result","destination","items","Array","from","splice","source","index","reorderedItem","uigenerator","array","onDragEnd","droppableId","provided","droppableProps","ref","innerRef","map","todo","draggableId","draggableProps","dragHandleProps","Checkbox","checked","Chip","ize","placeholder","sort","a","b","temp","GroupPicker","pickGroup","setGroup","ToDoTab","tabValue","searchValue","colorValue","setValue","newTodoList","setNewTodoList","filter","toLowerCase","includes","Paper","square","Tabs","indicatorColor","textColor","event","newValue","aria-label","Tab","ToDoList","setTodos","setSearchValue","setColorValue","addTodo","test","newTodos","updatedTodos","console","log","removedArr","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a03ec076.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./HeaderText.css\";\r\n\r\nfunction HeaderText(props) {\r\n  return <h1 className=\"todo-header-text\">To Do List</h1>;\r\n}\r\n\r\nexport default HeaderText;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\r\n\r\nfunction PriorityPicker({ required, pickPriority }) {\r\n  const [priority, setPriority] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    pickPriority(priority);\r\n  }, [pickPriority, priority]);\r\n\r\n  const handlePriorityChange = (e) => {\r\n    setPriority(e.target.value);\r\n    return priority;\r\n  };\r\n\r\n  return (\r\n    <FormControl className=\"formControl\">\r\n      <InputLabel id=\"priority-select-label\">Priority</InputLabel>\r\n      <Select\r\n        labelId=\"priority-select-label\"\r\n        id=\"priority-select\"\r\n        value={priority}\r\n        required={required}\r\n        onChange={handlePriorityChange}\r\n        className=\"formControl\"\r\n      >\r\n        <MenuItem value=\"High\">High</MenuItem>\r\n        <MenuItem value=\"Medium\">Medium</MenuItem>\r\n        <MenuItem value=\"Low\">Low</MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default PriorityPicker;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\r\n\r\nfunction ColorPicker({ required, pickColor, none }) {\r\n  const [color, setColor] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    pickColor(color);\r\n  }, [pickColor, color]);\r\n\r\n  const handleColorChange = (e) => {\r\n    setColor(e.target.value);\r\n  };\r\n  return (\r\n    <FormControl className=\"formControl\">\r\n      <InputLabel id=\"color-select-label\">Color</InputLabel>\r\n      <Select\r\n        labelId=\"color-select-label\"\r\n        id=\"color-select\"\r\n        value={color}\r\n        required={required}\r\n        onChange={handleColorChange}\r\n        className=\"formControl\"\r\n      >\r\n        <MenuItem value=\"blue\" className=\"blue\">\r\n          Blue\r\n        </MenuItem>\r\n        <MenuItem value=\"purple\" className=\"purple\">\r\n          Purple\r\n        </MenuItem>\r\n        <MenuItem value=\"pink\" className=\"pink\">\r\n          Pink\r\n        </MenuItem>\r\n        <MenuItem value=\"orange\" className=\"orange\">\r\n          Orange\r\n        </MenuItem>\r\n        <MenuItem value=\"green\" className=\"green\">\r\n          Green\r\n        </MenuItem>\r\n        {none && <MenuItem value=\"\">None</MenuItem>}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default ColorPicker;\r\n","import React, { useState } from \"react\";\r\nimport uniqid from \"uniqid\";\r\n\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nimport PriorityPicker from \"../Pickers/PriorityPicker\";\r\nimport ColorPicker from \"../Pickers/ColorPicker\";\r\n\r\nimport \"./ToDoAdd.css\";\r\n\r\n//Todo adding Modala\r\nfunction ToDoAdd({ onSubmit }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [color, setColor] = useState(\"pink\");\r\n  const [priority, setPriority] = useState(\"Low\");\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  //Creating new Todo\r\n  const handleAddTodo = (e) => {\r\n    e.preventDefault();\r\n    onSubmit({\r\n      id: uniqid(),\r\n      text: input,\r\n      color: color,\r\n      priority: priority,\r\n      date: Date.now(),\r\n      isComplete: false,\r\n    });\r\n    setInput(\"\");\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"contained\"\r\n        className=\"add-button\"\r\n        startIcon={<AddIcon />}\r\n        onClick={handleClickOpen}\r\n      >\r\n        Add New\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Add new todo</DialogTitle>\r\n        <DialogContent className=\"add-todo-dialog\">\r\n          <form onSubmit={handleAddTodo}>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"description\"\r\n              label=\"Description\"\r\n              type=\"text\"\r\n              value={input}\r\n              required\r\n              onChange={handleChange}\r\n              fullWidth\r\n            />\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"flex-end\"\r\n              alignItems=\"center\"\r\n              className=\"dialog-pickers\"\r\n            >\r\n              <Grid item xs={6} className=\"control\">\r\n                <PriorityPicker\r\n                  required\r\n                  pickPriority={(priority) => setPriority(priority)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6} className=\"control\">\r\n                <ColorPicker required pickColor={(color) => setColor(color)} />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button type=\"submit\" color=\"primary\">\r\n              Add\r\n            </Button>\r\n          </form>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoAdd;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Container, Grid, TextField } from \"@material-ui/core\";\r\n\r\nimport ToDoAdd from \"./ToDoAdd\";\r\n\r\nimport \"./ToDoHeader.css\";\r\n\r\nimport ColorPicker from \"../Pickers/ColorPicker\";\r\n\r\nfunction ToDoHeader({ onSubmit, getSearchValue, getColorValue }) {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [color, setColor] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getSearchValue(search);\r\n    getColorValue(color);\r\n  }, [getSearchValue, search, color, getColorValue]);\r\n\r\n  //Getting search value\r\n  const handleSearch = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" className=\"header-container\">\r\n      <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\">\r\n        <Grid item xs={6} className=\"control\">\r\n          <TextField\r\n            id=\"outlined-multiline-flexible\"\r\n            label=\"Search\"\r\n            multiline\r\n            rowsMax={4}\r\n            value={search}\r\n            onChange={handleSearch}\r\n            variant=\"outlined\"\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={4}></Grid>\r\n        <Grid item xs={4} className=\"filter-text\">\r\n          Filter By\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <ColorPicker pickColor={(color) => setColor(color)} none={true} />\r\n        </Grid>\r\n        <Grid item xs={4}></Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ToDoHeader;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { RiCloseCircleLine } from \"react-icons/ri\";\r\nimport { Checkbox, Chip } from \"@material-ui/core\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\nimport \"./ToDo.css\";\r\n\r\nconst ToDo = ({ todos, completeTodo, removeTodo, group }) => {\r\n  const [newtodos, setNewtodos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setNewtodos(todos);\r\n  }, [todos]);\r\n\r\n  //Drag and drop fuctionality\r\n  function handleOnDragEnd(result) {\r\n    if (!result.destination) return;\r\n\r\n    const items = Array.from(newtodos);\r\n    const [reorderedItem] = items.splice(result.source.index, 1);\r\n    items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n    setNewtodos(items);\r\n  }\r\n\r\n  //To do list\r\n  const uigenerator = (array) => {\r\n    return (\r\n      <DragDropContext onDragEnd={handleOnDragEnd}>\r\n        <Droppable droppableId=\"todos\">\r\n          {(provided) => (\r\n            <div {...provided.droppableProps} ref={provided.innerRef}>\r\n              {array.map((todo, index) => (\r\n                <Draggable key={todo.id} draggableId={todo.id} index={index}>\r\n                  {(provided) => (\r\n                    <div\r\n                      className={\r\n                        todo.isComplete\r\n                          ? `todo-row complete ${todo.color}`\r\n                          : `todo-row ${todo.color}`\r\n                      }\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                    >\r\n                      <Checkbox\r\n                        checked={todo.isComplete}\r\n                        onClick={() => completeTodo(todo.id)}\r\n                        color=\"default\"\r\n                      />\r\n                      <Chip ize=\"small\" label={todo.priority} />\r\n                      <div key={todo.id} className=\"text\">\r\n                        {todo.text}{\" \"}\r\n                      </div>\r\n                      <div className=\"icons\">\r\n                        <RiCloseCircleLine\r\n                          onClick={() => removeTodo(todo.id)}\r\n                          className=\"delete-icon\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    );\r\n  };\r\n\r\n  const compareColor = (a, b) => {\r\n    if (a.color < b.color) {\r\n      return -1;\r\n    }\r\n    if (a.color > b.color) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  //Grouping by Color\r\n  if (group === \"Color\") {\r\n    const sortedlist = newtodos.sort(compareColor);\r\n    return uigenerator(sortedlist);\r\n  }\r\n\r\n  //Grouping by Priority\r\n  if (group === \"Priority\") {\r\n    const mapTodos = newtodos.map((todo) => {\r\n      if (todo.priority === \"Low\") todo.temp = 3;\r\n      if (todo.priority === \"Medium\") todo.temp = 2;\r\n      if (todo.priority === \"High\") todo.temp = 1;\r\n      return todo;\r\n    });\r\n\r\n    return uigenerator(mapTodos.sort((a, b) => a.temp - b.temp));\r\n  }\r\n\r\n  return uigenerator(newtodos);\r\n};\r\n\r\nexport default ToDo;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\r\n\r\nfunction GroupPicker({ pickGroup }) {\r\n  const [group, setGroup] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    pickGroup(group);\r\n  }, [pickGroup, group]);\r\n\r\n  const handleGroupChange = (e) => {\r\n    setGroup(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <FormControl variant=\"filled\">\r\n      <InputLabel id=\"group-select-label\">Group By</InputLabel>\r\n      <Select\r\n        labelId=\"group-select-label\"\r\n        id=\"group-select\"\r\n        value={group}\r\n        onChange={handleGroupChange}\r\n        className=\"group-picker formControl\"\r\n      >\r\n        <MenuItem value=\"Color\">Color</MenuItem>\r\n        <MenuItem value=\"Priority\">Priority</MenuItem>\r\n        <MenuItem value=\"\">Clear</MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default GroupPicker;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Container, Tabs, Tab, Paper, Grid } from \"@material-ui/core\";\r\n\r\nimport ToDo from \"./ToDo\";\r\nimport GroupPicker from \"./Pickers/GroupPicker\";\r\n\r\nimport \"./ToDoTab.css\";\r\n\r\nfunction ToDoTab({\r\n  todos,\r\n  completeTodo,\r\n  removeTodo,\r\n  tabValue,\r\n  searchValue,\r\n  colorValue,\r\n}) {\r\n  const [value, setValue] = useState(0); //tab value\r\n  const [newTodoList, setNewTodoList] = useState([]);\r\n  const [group, setGroup] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!searchValue && !colorValue) {\r\n      //Comleted /Not completed tabbing\r\n      if (value === 1) {\r\n        setNewTodoList(todos.filter((todo) => todo.isComplete));\r\n      } else if (value === 0) {\r\n        setNewTodoList(todos.filter((todo) => !todo.isComplete));\r\n      }\r\n    } else if (colorValue) {\r\n      //Filter By color\r\n      setNewTodoList(todos.filter((todo) => todo.color === colorValue));\r\n    } else {\r\n      //Search Filter\r\n      setNewTodoList(\r\n        todos.filter((todo) => {\r\n          return todo.text.toLowerCase().includes(searchValue.toLowerCase());\r\n        })\r\n      );\r\n    }\r\n  }, [todos, value, searchValue, colorValue]);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" className=\"to-do-tab\">\r\n      <Paper square className={\"todo-paper\"}>\r\n        <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\">\r\n          <Grid item xs={8}>\r\n            <Tabs\r\n              value={value}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              onChange={handleChange}\r\n              aria-label=\"disabled tabs example\"\r\n            >\r\n              <Tab label=\"ToDo\" value={0} />\r\n              <Tab label=\"Completed\" value={1} />\r\n            </Tabs>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <GroupPicker pickGroup={(group) => setGroup(group)} />\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n      <ToDo\r\n        todos={newTodoList}\r\n        completeTodo={completeTodo}\r\n        removeTodo={removeTodo}\r\n        tabValue={tabValue}\r\n        group={group}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ToDoTab;\r\n","import React, { useState } from \"react\";\r\nimport HeaderText from \"./Header/HeaderText\";\r\nimport ToDoAdd from \"./Header/ToDoAdd\";\r\n\r\nimport ToDoHeader from \"./Header/ToDoHeader\";\r\nimport ToDoTab from \"./ToDoTab\";\r\n\r\nfunction ToDoList() {\r\n  const [todos, setTodos] = useState([]);\r\n  const [searchValue, setSearchValue] = useState([]);\r\n  const [colorValue, setColorValue] = useState();\r\n\r\n  //Adding New Todo to list\r\n  const addTodo = (todo) => {\r\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return;\r\n    }\r\n\r\n    const newTodos = [todo, ...todos];\r\n\r\n    setTodos(newTodos);\r\n  };\r\n\r\n  //Removing a todo\r\n  const removeTodo = (id) => {\r\n    const removedArr = [...todos].filter((todo) => todo.id !== id);\r\n\r\n    setTodos(removedArr);\r\n  };\r\n\r\n  //Marking ascompleted\r\n  const completeTodo = (id) => {\r\n    let updatedTodos = todos.map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n    console.log(todos);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"header-top\">\r\n        <HeaderText />\r\n        <ToDoAdd onSubmit={addTodo} />\r\n      </div>\r\n      <div className=\"todo-app\">\r\n        <ToDoHeader\r\n          onSubmit={addTodo}\r\n          getSearchValue={(value) => setSearchValue(value)}\r\n          getColorValue={(color) => setColorValue(color)}\r\n        />\r\n        <ToDoTab\r\n          todos={todos}\r\n          completeTodo={completeTodo}\r\n          removeTodo={removeTodo}\r\n          searchValue={searchValue}\r\n          colorValue={colorValue}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ToDoList;\r\n","import ToDoList from \"./components/ToDoList\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div>\n      <ToDoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}