{"version":3,"sources":["components/Header/HeaderText.jsx","components/Pickers/ColorPicker.jsx","components/Pickers/PriorityPicker.jsx","components/Header/ToDoModal.jsx","components/Header/ToDoHeader.jsx","components/ToDo.jsx","components/Pickers/GroupPicker.jsx","components/ToDoTab.jsx","components/ToDoList.jsx","App.js","index.js"],"names":["HeaderText","props","className","ColorPicker","required","pickColor","none","useState","color","setColor","useEffect","FormControl","InputLabel","id","Select","labelId","onChange","e","target","value","MenuItem","PriorityPicker","pickPriority","preValue","priority","setPriority","ToDoModal","onSubmit","editIcon","todo","onUpdate","open","setOpen","text","input","setInput","handleClickOpen","handleClose","onClick","Button","variant","startIcon","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","preventDefault","uniqid","date","Date","now","isComplete","TextField","autoFocus","margin","label","type","fullWidth","Grid","container","direction","justify","alignItems","item","xs","ToDoHeader","getSearchValue","getColorValue","search","setSearch","Container","maxWidth","multiline","rowsMax","ToDo","todos","completeTodo","removeTodo","group","newtodos","setNewtodos","handleOnDragEnd","result","destination","items","Array","from","splice","source","index","reorderedItem","uigenerator","array","onDragEnd","droppableId","provided","droppableProps","ref","innerRef","map","draggableId","draggableProps","dragHandleProps","Checkbox","checked","Chip","ize","placeholder","sort","a","b","temp","GroupPicker","pickGroup","setGroup","ToDoTab","tabValue","searchValue","colorValue","setValue","newTodoList","setNewTodoList","filter","toLowerCase","includes","Paper","square","Tabs","indicatorColor","textColor","event","newValue","aria-label","Tab","ToDoList","setTodos","setSearchValue","setColorValue","test","newTodos","updatedTodos","console","log","removedArr","todoId","prev","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36044840.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./HeaderText.css\";\r\n\r\nfunction HeaderText(props) {\r\n  return <h1 className=\"todo-header-text\">To Do List</h1>;\r\n}\r\n\r\nexport default HeaderText;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\r\n\r\nfunction ColorPicker({ required, pickColor, none }) {\r\n  const [color, setColor] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    pickColor(color);\r\n  }, [pickColor, color]);\r\n\r\n  const handleColorChange = (e) => {\r\n    setColor(e.target.value);\r\n  };\r\n  return (\r\n    <FormControl className=\"formControl\">\r\n      <InputLabel id=\"color-select-label\">Color</InputLabel>\r\n      <Select\r\n        labelId=\"color-select-label\"\r\n        id=\"color-select\"\r\n        required={required}\r\n        onChange={handleColorChange}\r\n        className=\"formControl\"\r\n      >\r\n        <MenuItem value=\"blue\" className=\"blue\">\r\n          Blue\r\n        </MenuItem>\r\n        <MenuItem value=\"purple\" className=\"purple\">\r\n          Purple\r\n        </MenuItem>\r\n        <MenuItem value=\"pink\" className=\"pink\">\r\n          Pink\r\n        </MenuItem>\r\n        <MenuItem value=\"orange\" className=\"orange\">\r\n          Orange\r\n        </MenuItem>\r\n        <MenuItem value=\"green\" className=\"green\">\r\n          Green\r\n        </MenuItem>\r\n        {none && <MenuItem value=\"\">None</MenuItem>}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default ColorPicker;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\r\n\r\nfunction PriorityPicker({ required, pickPriority, preValue }) {\r\n  const [priority, setPriority] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    pickPriority(priority);\r\n  }, [pickPriority, priority]);\r\n\r\n  const handlePriorityChange = (e) => {\r\n    setPriority(e.target.value);\r\n    return priority;\r\n  };\r\n\r\n  return (\r\n    <FormControl className=\"formControl\">\r\n      <InputLabel id=\"priority-select-label\">Priority</InputLabel>\r\n      <Select\r\n        labelId=\"priority-select-label\"\r\n        id=\"priority-select\"\r\n        value={priority}\r\n        required={required}\r\n        onChange={handlePriorityChange}\r\n        className=\"formControl\"\r\n      >\r\n        <MenuItem value=\"High\">High</MenuItem>\r\n        <MenuItem value=\"Medium\">Medium</MenuItem>\r\n        <MenuItem value=\"Low\">Low</MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default PriorityPicker;\r\n","import React, { useState } from \"react\";\r\nimport uniqid from \"uniqid\";\r\n\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { TiEdit } from \"react-icons/ti\";\r\n\r\nimport PriorityPicker from \"../Pickers/PriorityPicker\";\r\nimport ColorPicker from \"../Pickers/ColorPicker\";\r\n\r\nimport \"./ToDoAdd.css\";\r\n\r\n//Todo adding Modala\r\nfunction ToDoModal({ onSubmit, editIcon, todo, onUpdate }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [color, setColor] = useState(editIcon ? todo.color : \"\");\r\n  const [priority, setPriority] = useState(editIcon ? todo.priority : \"\");\r\n  const [input, setInput] = useState(editIcon ? todo.text : \"\");\r\n\r\n  const handleChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  //Creating new Todo/Updating todo\r\n  const handleSubmit = (e) => {\r\n    if (editIcon) {\r\n      e.preventDefault();\r\n      onUpdate(todo.id, {\r\n        id: uniqid(),\r\n        text: input,\r\n        color: color,\r\n        priority: priority,\r\n        date: Date.now(),\r\n        isComplete: false,\r\n      });\r\n    } else {\r\n      e.preventDefault();\r\n      onSubmit({\r\n        id: uniqid(),\r\n        text: input,\r\n        color: color,\r\n        priority: priority,\r\n        date: Date.now(),\r\n        isComplete: false,\r\n      });\r\n      setInput(\"\");\r\n      setOpen(false);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      {editIcon ? (\r\n        <TiEdit onClick={handleClickOpen} />\r\n      ) : (\r\n        <Button\r\n          variant=\"contained\"\r\n          className=\"add-button\"\r\n          startIcon={<AddIcon />}\r\n          onClick={handleClickOpen}\r\n        >\r\n          Add New\r\n        </Button>\r\n      )}\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          {editIcon ? \"Edit todo\" : \"Add new Todo\"}\r\n        </DialogTitle>\r\n        <DialogContent className=\"add-todo-dialog\">\r\n          <form onSubmit={handleSubmit}>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"description\"\r\n              label=\"Description\"\r\n              type=\"text\"\r\n              value={input}\r\n              required\r\n              onChange={handleChange}\r\n              fullWidth\r\n            />\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"flex-end\"\r\n              alignItems=\"center\"\r\n              className=\"dialog-pickers\"\r\n            >\r\n              <Grid item xs={6} className=\"control\">\r\n                <PriorityPicker\r\n                  required\r\n                  pickPriority={(priority) => setPriority(priority)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6} className=\"control\">\r\n                <ColorPicker required pickColor={(color) => setColor(color)} />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button type=\"submit\" color=\"primary\">\r\n              {editIcon ? \"Save\" : \"Add\"}\r\n            </Button>\r\n          </form>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoModal;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Container, Grid, TextField } from \"@material-ui/core\";\r\n\r\n// import ToDoAdd from \"./ToDoAdd\";\r\n\r\nimport \"./ToDoHeader.css\";\r\n\r\nimport ColorPicker from \"../Pickers/ColorPicker\";\r\nimport ToDoModal from \"./ToDoModal\";\r\n\r\nfunction ToDoHeader({ onSubmit, getSearchValue, getColorValue }) {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [color, setColor] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getSearchValue(search);\r\n    getColorValue(color);\r\n  }, [getSearchValue, search, color, getColorValue]);\r\n\r\n  //Getting search value\r\n  const handleSearch = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" className=\"header-container\">\r\n      <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\">\r\n        <Grid item xs={6} className=\"control\">\r\n          <TextField\r\n            id=\"outlined-multiline-flexible\"\r\n            label=\"Search\"\r\n            multiline\r\n            rowsMax={4}\r\n            value={search}\r\n            onChange={handleSearch}\r\n            variant=\"outlined\"\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={4}>\r\n          <ToDoModal onSubmit={onSubmit} />\r\n        </Grid>\r\n        <Grid item xs={4} className=\"filter-text\">\r\n          Filter By\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <ColorPicker pickColor={(color) => setColor(color)} none={true} />\r\n        </Grid>\r\n        <Grid item xs={4}></Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ToDoHeader;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { RiCloseCircleLine } from \"react-icons/ri\";\r\nimport { Checkbox, Chip } from \"@material-ui/core\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport ToDoModal from \"../components/Header/ToDoModal\";\r\n\r\nimport \"./ToDo.css\";\r\n\r\nconst ToDo = ({ todos, completeTodo, onUpdate, removeTodo, group }) => {\r\n  const [newtodos, setNewtodos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setNewtodos(todos);\r\n  }, [todos]);\r\n\r\n  //Drag and drop fuctionality\r\n  function handleOnDragEnd(result) {\r\n    if (!result.destination) return;\r\n\r\n    const items = Array.from(newtodos);\r\n    const [reorderedItem] = items.splice(result.source.index, 1);\r\n    items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n    setNewtodos(items);\r\n  }\r\n\r\n  //To do list\r\n  const uigenerator = (array) => {\r\n    return (\r\n      <DragDropContext onDragEnd={handleOnDragEnd}>\r\n        <Droppable droppableId=\"todos\">\r\n          {(provided) => (\r\n            <div {...provided.droppableProps} ref={provided.innerRef}>\r\n              {array.map((todo, index) => (\r\n                <Draggable key={todo.id} draggableId={todo.id} index={index}>\r\n                  {(provided) => (\r\n                    <div\r\n                      className={\r\n                        todo.isComplete\r\n                          ? `todo-row complete ${todo.color}`\r\n                          : `todo-row ${todo.color}`\r\n                      }\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                    >\r\n                      <Checkbox\r\n                        checked={todo.isComplete}\r\n                        onClick={() => completeTodo(todo.id)}\r\n                        color=\"default\"\r\n                      />\r\n                      <Chip ize=\"small\" label={todo.priority} />\r\n                      <div key={todo.id} className=\"text\">\r\n                        {todo.text}{\" \"}\r\n                      </div>\r\n\r\n                      <div className=\"icons\">\r\n                        <ToDoModal\r\n                          editIcon={true}\r\n                          todo={todo}\r\n                          onUpdate={onUpdate}\r\n                        />\r\n                        <RiCloseCircleLine\r\n                          onClick={() => removeTodo(todo.id)}\r\n                          className=\"delete-icon\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    );\r\n  };\r\n\r\n  const compareColor = (a, b) => {\r\n    if (a.color < b.color) {\r\n      return -1;\r\n    }\r\n    if (a.color > b.color) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  //Grouping by Color\r\n  if (group === \"Color\") {\r\n    const sortedlist = newtodos.sort(compareColor);\r\n    return uigenerator(sortedlist);\r\n  }\r\n\r\n  //Grouping by Priority\r\n  if (group === \"Priority\") {\r\n    const mapTodos = newtodos.map((todo) => {\r\n      if (todo.priority === \"Low\") todo.temp = 3;\r\n      if (todo.priority === \"Medium\") todo.temp = 2;\r\n      if (todo.priority === \"High\") todo.temp = 1;\r\n      return todo;\r\n    });\r\n\r\n    return uigenerator(mapTodos.sort((a, b) => a.temp - b.temp));\r\n  }\r\n\r\n  return uigenerator(newtodos);\r\n};\r\n\r\nexport default ToDo;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\r\n\r\nfunction GroupPicker({ pickGroup }) {\r\n  const [group, setGroup] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    pickGroup(group);\r\n  }, [pickGroup, group]);\r\n\r\n  const handleGroupChange = (e) => {\r\n    setGroup(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <FormControl variant=\"filled\">\r\n      <InputLabel id=\"group-select-label\">Group By</InputLabel>\r\n      <Select\r\n        labelId=\"group-select-label\"\r\n        id=\"group-select\"\r\n        value={group}\r\n        onChange={handleGroupChange}\r\n        className=\"group-picker formControl\"\r\n      >\r\n        <MenuItem value=\"Color\">Color</MenuItem>\r\n        <MenuItem value=\"Priority\">Priority</MenuItem>\r\n        <MenuItem value=\"\">Clear</MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default GroupPicker;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Container, Tabs, Tab, Paper, Grid } from \"@material-ui/core\";\r\n\r\nimport ToDo from \"./ToDo\";\r\nimport GroupPicker from \"./Pickers/GroupPicker\";\r\n\r\nimport \"./ToDoTab.css\";\r\n\r\nfunction ToDoTab({\r\n  todos,\r\n  completeTodo,\r\n  onUpdate,\r\n  removeTodo,\r\n  tabValue,\r\n  searchValue,\r\n  colorValue,\r\n}) {\r\n  const [value, setValue] = useState(0);\r\n  const [newTodoList, setNewTodoList] = useState([]);\r\n  const [group, setGroup] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!searchValue && !colorValue) {\r\n      //Comleted /Not completed tabbing\r\n      if (value === 1) {\r\n        setNewTodoList(todos.filter((todo) => todo.isComplete));\r\n      } else if (value === 0) {\r\n        setNewTodoList(todos.filter((todo) => !todo.isComplete));\r\n      }\r\n    } else if (colorValue) {\r\n      //Filter By color\r\n      setNewTodoList(todos.filter((todo) => todo.color === colorValue));\r\n    } else {\r\n      //Search Filter\r\n      setNewTodoList(\r\n        todos.filter((todo) => {\r\n          return todo.text.toLowerCase().includes(searchValue.toLowerCase());\r\n        })\r\n      );\r\n    }\r\n  }, [todos, value, searchValue, colorValue]);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" className=\"to-do-tab\">\r\n      <Paper square className={\"todo-paper\"}>\r\n        <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\">\r\n          <Grid item xs={8}>\r\n            <Tabs\r\n              value={value}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              onChange={handleChange}\r\n              aria-label=\"disabled tabs example\"\r\n            >\r\n              <Tab label=\"ToDo\" value={0} />\r\n              <Tab label=\"Completed\" value={1} />\r\n            </Tabs>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <GroupPicker pickGroup={(group) => setGroup(group)} />\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n      <ToDo\r\n        todos={newTodoList}\r\n        completeTodo={completeTodo}\r\n        onUpdate={onUpdate}\r\n        removeTodo={removeTodo}\r\n        tabValue={tabValue}\r\n        group={group}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ToDoTab;\r\n","import React, { useState } from \"react\";\r\nimport HeaderText from \"./Header/HeaderText\";\r\n\r\nimport ToDoHeader from \"./Header/ToDoHeader\";\r\nimport ToDoTab from \"./ToDoTab\";\r\n\r\nfunction ToDoList() {\r\n  const [todos, setTodos] = useState([]);\r\n  const [searchValue, setSearchValue] = useState([]);\r\n  const [colorValue, setColorValue] = useState();\r\n\r\n  //Adding New Todo to list\r\n  const addTodo = (todo) => {\r\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return;\r\n    }\r\n\r\n    const newTodos = [todo, ...todos];\r\n\r\n    setTodos(newTodos);\r\n  };\r\n\r\n  const updateTodo = (todoId, newValue) => {\r\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n      return;\r\n    }\r\n\r\n    setTodos((prev) =>\r\n      prev.map((item) => (item.id === todoId ? newValue : item))\r\n    );\r\n  };\r\n\r\n  //Removing a todo\r\n  const removeTodo = (id) => {\r\n    const removedArr = [...todos].filter((todo) => todo.id !== id);\r\n\r\n    setTodos(removedArr);\r\n  };\r\n\r\n  //Marking as completed\r\n  const completeTodo = (id) => {\r\n    let updatedTodos = todos.map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n    console.log(todos);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HeaderText />\r\n      <ToDoHeader\r\n        onSubmit={addTodo}\r\n        getSearchValue={(value) => setSearchValue(value)}\r\n        getColorValue={(color) => setColorValue(color)}\r\n      />\r\n      <ToDoTab\r\n        todos={todos}\r\n        completeTodo={completeTodo}\r\n        removeTodo={removeTodo}\r\n        onUpdate={updateTodo}\r\n        searchValue={searchValue}\r\n        colorValue={colorValue}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ToDoList;\r\n","import ToDoList from \"./components/ToDoList\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"todo-app\">\r\n      <ToDoList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}